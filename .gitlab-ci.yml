build_image:
  script:
    - export BRANCH=${CI_BUILD_REF_NAME//[^0-9A-Za-z]/};
    - export BRANCH=${BRANCH,,};
    - echo Branch $BRANCH Image $DOCKER_IMAGE_NAME-$BRANCH Build time $(date +"%T") $(date +"%m-%d-%Y") > version.txt
    - docker build -t $DOCKER_IMAGE_NAME-$BRANCH .

test_image_code:
  script:
    - export BRANCH=${CI_BUILD_REF_NAME//[^0-9A-Za-z]/};
    - export BRANCH=${BRANCH,,};
    - docker run --rm $DOCKER_IMAGE_NAME-$BRANCH /bin/bash -c 'flake8 --ignore=E501,F403 ./'
    - docker run --rm $DOCKER_IMAGE_NAME-$BRANCH /bin/bash -c 'python ./manage.py test'

backup_databases:
  script:
    - export BRANCH=${CI_BUILD_REF_NAME//[^0-9A-Za-z]/};
    - export BRANCH=${BRANCH,,};
    - mkdir -p /backup/$PROJECT_NAME/production-versioned
    - docker run --link super5-db:mysql-charset -v /backup/$PROJECT_NAME:/backup $DOCKER_IMAGE_NAME-$BRANCH /bin/bash -c 'mysqldump -u root -p$MYSQL_CHARSET_ENV_MYSQL_ROOT_PASSWORD -h$MYSQL_CHARSET_PORT_3306_TCP_ADDR '$MYSQL_DB_PREFIX'master > /backup/master-latest.sql;'
    - docker run --link super5-db:mysql-charset -v /backup/$PROJECT_NAME:/backup $DOCKER_IMAGE_NAME-$BRANCH /bin/bash -c "mysqldump -u root -p\$MYSQL_CHARSET_ENV_MYSQL_ROOT_PASSWORD -h\$MYSQL_CHARSET_PORT_3306_TCP_ADDR '$MYSQL_DB_PREFIX'production > /backup/production-versioned/production-$CI_BUILD_ID.sql;"
    - docker run --link super5-db:mysql-charset -v /backup/$PROJECT_NAME:/backup $DOCKER_IMAGE_NAME-$BRANCH /bin/bash -c 'mysqldump -u root -p$MYSQL_CHARSET_ENV_MYSQL_ROOT_PASSWORD -h$MYSQL_CHARSET_PORT_3306_TCP_ADDR '$MYSQL_DB_PREFIX'production > /backup/production-latest.sql;'

make_test_database:
  script:
    - export BRANCH=${CI_BUILD_REF_NAME//[^0-9A-Za-z]/};
    - export BRANCH=${BRANCH,,};
    - docker run --rm --link super5-db:mysql-charset -v /backup/$PROJECT_NAME:/backup $DOCKER_IMAGE_NAME-$BRANCH /bin/bash -c "mysql -u root -p\$MYSQL_CHARSET_ENV_MYSQL_ROOT_PASSWORD -h\$MYSQL_CHARSET_PORT_3306_TCP_ADDR -e \"DROP DATABASE IF EXISTS $MYSQL_DB_PREFIX$BRANCH\"; mysql -u root -p\$MYSQL_CHARSET_ENV_MYSQL_ROOT_PASSWORD -h\$MYSQL_CHARSET_PORT_3306_TCP_ADDR -e \"CREATE DATABASE $MYSQL_DB_PREFIX$BRANCH\"; mysql -u root -p\$MYSQL_CHARSET_ENV_MYSQL_ROOT_PASSWORD -h\$MYSQL_CHARSET_PORT_3306_TCP_ADDR $MYSQL_DB_PREFIX$BRANCH < /backup/master-latest.sql;"
  except:
    - master
    - production

deploy:
  script:
    - export BRANCH=${CI_BUILD_REF_NAME//[^0-9A-Za-z]/};
    - export BRANCH=${BRANCH,,};
    - MYSQL_DATABASE_NAME=$MYSQL_DB_PREFIX$BRANCH;
    - docker rm -f $DOCKER_IMAGE_NAME-$BRANCH || true;
    - docker run --rm --link super5-db:mysql-charset -e MYSQL_DATABASE_NAME=$MYSQL_DATABASE_NAME $DOCKER_IMAGE_NAME-$BRANCH /bin/sh -c 'cd /opt/app && python3 manage.py migrate --noinput --settings=Project.production_settings'
    - docker run --name $DOCKER_IMAGE_NAME-$BRANCH -v /docker_volumes/$DOCKER_IMAGE_NAME/$BRANCH-media:/opt/app/media --link super5-db:mysql-charset -e MYSQL_DATABASE_NAME=$MYSQL_DATABASE_NAME -p 0.0.0.0::80 -d $DOCKER_IMAGE_NAME-$BRANCH sh /opt/app/Deploy/start_in_docker.sh;

setup_nginx:
  script:
    - export BRANCH=${CI_BUILD_REF_NAME//[^0-9A-Za-z]/};
    - export BRANCH=${BRANCH,,};
    - CONTAINER_PORT=$(docker inspect -f '{{range $p, $conf := .NetworkSettings.Ports}}{{(index $conf 0).HostPort}}{{end}}' $DOCKER_IMAGE_NAME-$BRANCH)
    - export CONTAINER_PORT;
    - envsubst '$BRANCH $CONTAINER_PORT $DOCKER_IMAGE_NAME $PROJECT_NAME' < ./Deploy/nginx-site-enabled > /etc/nginx/sites-enabled/$DOCKER_IMAGE_NAME-$BRANCH
    - sudo /etc/init.d/nginx restart;
    - echo "Url $BRANCH.guru.huskyjam.com"
  except:
    - production

setup_nginx_production:
  script:
    - export BRANCH=${CI_BUILD_REF_NAME//[^0-9A-Za-z]/};
    - export BRANCH=${BRANCH,,};
    - CONTAINER_PORT=$(docker inspect -f '{{range $p, $conf := .NetworkSettings.Ports}}{{(index $conf 0).HostPort}}{{end}}' $DOCKER_IMAGE_NAME-$BRANCH)
    - export CONTAINER_PORT;
    - printenv;
    - envsubst '$BRANCH $CONTAINER_PORT $DOCKER_IMAGE_NAME $PROJECT_NAME' < ./Deploy/nginx-production-site-enabled > /etc/nginx/sites-enabled/$DOCKER_IMAGE_NAME-$BRANCH
    - sudo /etc/init.d/nginx restart;
    - echo "Url guru.huskyjam.com"
  only:
    - production

get_logs:
  script:
    - export BRANCH=${CI_BUILD_REF_NAME//[^0-9A-Za-z]/};
    - export BRANCH=${BRANCH,,};
    - docker exec $DOCKER_IMAGE_NAME-$BRANCH /bin/bash -c 'cat django.log';
